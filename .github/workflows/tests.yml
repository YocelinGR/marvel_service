name: Tests && Code Quality
on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  verify:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [23.1]
        elixir: [1.11.1]

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: marvel_service_test
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: allenevans/set-env@v2.0.0
        name: Setup envars
        with:
          overwrite: false
          DB_USERNAME_TEST: postgres
          DB_PASSWORD_TEST: postgres
          SECRET_KEY_BASE: some_key
          SQL_USER: postgres
          SQL_PASS: postgres
          SQL_DATABASE: marvel_service_test
          SQL_HOST: "localhost"
          INCOME_SALES_DB_NAME: ""
          INCOME_SALES_DB_USERNAME: ""
          INCOME_SALES_DB_PASSWORD: ""
          INCOME_SALES_DB_HOSTNAME: ""
          USERS_DB_NAME: ""
          USERS_DB_USERNAME: ""
          USERS_DB_PASSWORD: ""
          USERS_DB_HOSTNAME: ""

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 13.8.0

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install deps
        run: |
          mix deps.get
          (cd assets && yarn)

      - run: mix format --check-formatted
      - run: mix compile --warnings-as-errors
      - run: mix credo
      - run: mix test
